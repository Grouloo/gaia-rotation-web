---
import Form from '@components/Form/Form.astro'
import { FieldConfig, onSubmit } from '@components/Form/Form'
import { useHuggingFace } from '@adapters'
import { Markdown } from '@astropub/md'
import { Err } from 'shulk'

const department = Astro.url.searchParams.get('department')! || ''
const farmSize = Astro.url.searchParams.get('farmSize')! || 0
const benefitsFromCommonAgriculturalPolicy =
	Astro.url.searchParams.get('benefitsFromCommonAgriculturalPolicy')! || false

const cultures = Astro.url.searchParams.get('cultures')! || ''
const culturesList = cultures
	.split(',')
	.map((crop) => crop.trim())
	.filter((data, i, arr) => arr.indexOf(data) === i)

const yieldsFormRaw = culturesList.map((crop) => [
	crop,
	{
		label: 'Rendement ' + crop,
		config: FieldConfig.Number({ unit: 't/ha' }),
	},
])

let response: string | undefined

const yieldsForm = Object.fromEntries(yieldsFormRaw)

const formError = await onSubmit(Astro, yieldsForm, async (yields) => {
	try {
		const hf = await useHuggingFace()

		console.log('Input', {
			department: department as any,
			farmSize: Number(farmSize),
			benefitsFromCommonAgriculturalPolicy:
				!!benefitsFromCommonAgriculturalPolicy,
			cultures: culturesList,
			yields: yields as Record<string, number>,
		})

		const hfRes = await hf.findMyRotation({
			department: department as any,
			farmSize: Number(farmSize),
			benefitsFromCommonAgriculturalPolicy:
				!!benefitsFromCommonAgriculturalPolicy,
			cultures: culturesList,
			yields: yields as Record<string, number>,
		})

		response = hfRes.mapErr(() => undefined).val

		return hfRes.mapErr(() => 'AI not available.').map(() => ({}))
	} catch (e) {
		console.error(e)
		return Err((e as Error).message)
	}
})
---

<div x-data="{ loading: false }">
	{
		!response && (
			<>
				<div x-show="!loading">
					<h2>
						Veuillez saisir les rendements de vos différentes cultures (2/2)
					</h2>

					<Form
						definition={yieldsForm}
						cols={1}
						error={formError}
						hx-post={`/forms/yields?department=${department}&farmSize=${farmSize}&cultures=${cultures}&benefitsFromCommonAgriculturalPolicy=${benefitsFromCommonAgriculturalPolicy}`}
						hx-target="#form-content"
						x-on:submit="loading = true"
					/>
				</div>

				<div x-show="loading">
					<h2>Chargement en cours...</h2>
					<p>On s'occupe de tout !</p>
					<p>Faites-vous un café en attendant ☕️</p>
				</div>
			</>
		)
	}

	{
		response && (
			<>
				<h2>Votre prochaine rotation :</h2>

				<div>
					<Markdown of={response} />
				</div>
			</>
		)
	}
</div>
